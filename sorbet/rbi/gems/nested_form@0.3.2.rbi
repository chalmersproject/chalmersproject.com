# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `nested_form` gem.
# Please instead update this file by running `bin/tapioca gem nested_form`.

module NestedForm; end

module NestedForm::BuilderMixin
  def fields_for_nested_model(name, object, options, block); end
  def fields_for_with_nested_attributes(association_name, *args); end

  # Adds a link to insert a new associated records. The first argument is the name of the link, the second is the name of the association.
  #
  # f.link_to_add("Add Task", :tasks)
  #
  # You can pass HTML options in a hash at the end and a block for the content.
  #
  # <%= f.link_to_add(:tasks, :class => "add_task", :href => new_task_path) do %>
  # Add Task
  # <% end %>
  #
  # You can also pass <tt>model_object</tt> option with an object for use in
  # the blueprint, e.g.:
  #
  # <%= f.link_to_add(:tasks, :model_object => Task.new(:name => 'Task')) %>
  #
  # See the README for more details on where to call this method.
  def link_to_add(*args, &block); end

  # Adds a link to remove the associated record. The first argment is the name of the link.
  #
  # f.link_to_remove("Remove Task")
  #
  # You can pass HTML options in a hash at the end and a block for the content.
  #
  # <%= f.link_to_remove(:class => "remove_task", :href => "#") do %>
  # Remove Task
  # <% end %>
  #
  # See the README for more details on where to call this method.
  def link_to_remove(*args, &block); end

  private

  def fields_blueprint_id_for(association); end
end

class NestedForm::Engine < ::Rails::Engine; end
